/*
Nigerian Universities API

An API to get Nigerian universities by name or abbreviation.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the University type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &University{}

// University struct for University
type University struct {
	Name *string `json:"name,omitempty"`
	Abbreviation *string `json:"abbreviation,omitempty"`
	WebsiteLink *string `json:"website_link,omitempty"`
}

// NewUniversity instantiates a new University object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniversity() *University {
	this := University{}
	return &this
}

// NewUniversityWithDefaults instantiates a new University object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniversityWithDefaults() *University {
	this := University{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *University) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *University) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *University) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *University) SetName(v string) {
	o.Name = &v
}

// GetAbbreviation returns the Abbreviation field value if set, zero value otherwise.
func (o *University) GetAbbreviation() string {
	if o == nil || IsNil(o.Abbreviation) {
		var ret string
		return ret
	}
	return *o.Abbreviation
}

// GetAbbreviationOk returns a tuple with the Abbreviation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *University) GetAbbreviationOk() (*string, bool) {
	if o == nil || IsNil(o.Abbreviation) {
		return nil, false
	}
	return o.Abbreviation, true
}

// HasAbbreviation returns a boolean if a field has been set.
func (o *University) HasAbbreviation() bool {
	if o != nil && !IsNil(o.Abbreviation) {
		return true
	}

	return false
}

// SetAbbreviation gets a reference to the given string and assigns it to the Abbreviation field.
func (o *University) SetAbbreviation(v string) {
	o.Abbreviation = &v
}

// GetWebsiteLink returns the WebsiteLink field value if set, zero value otherwise.
func (o *University) GetWebsiteLink() string {
	if o == nil || IsNil(o.WebsiteLink) {
		var ret string
		return ret
	}
	return *o.WebsiteLink
}

// GetWebsiteLinkOk returns a tuple with the WebsiteLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *University) GetWebsiteLinkOk() (*string, bool) {
	if o == nil || IsNil(o.WebsiteLink) {
		return nil, false
	}
	return o.WebsiteLink, true
}

// HasWebsiteLink returns a boolean if a field has been set.
func (o *University) HasWebsiteLink() bool {
	if o != nil && !IsNil(o.WebsiteLink) {
		return true
	}

	return false
}

// SetWebsiteLink gets a reference to the given string and assigns it to the WebsiteLink field.
func (o *University) SetWebsiteLink(v string) {
	o.WebsiteLink = &v
}

func (o University) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o University) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Abbreviation) {
		toSerialize["abbreviation"] = o.Abbreviation
	}
	if !IsNil(o.WebsiteLink) {
		toSerialize["website_link"] = o.WebsiteLink
	}
	return toSerialize, nil
}

type NullableUniversity struct {
	value *University
	isSet bool
}

func (v NullableUniversity) Get() *University {
	return v.value
}

func (v *NullableUniversity) Set(val *University) {
	v.value = val
	v.isSet = true
}

func (v NullableUniversity) IsSet() bool {
	return v.isSet
}

func (v *NullableUniversity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniversity(val *University) *NullableUniversity {
	return &NullableUniversity{value: val, isSet: true}
}

func (v NullableUniversity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniversity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


